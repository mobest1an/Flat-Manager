package gui;

import client.RequestSender;
import lab.Flat;
import resources.ResourceController;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.time.format.DateTimeFormatter;

public class ElementInfoGUI {
    private JPanel mainPanel;
    private JPanel backButtonPanel;
    private JButton backButton;
    private JPanel elementInfoPanel;
    private JLabel userNameLabel;
    private JLabel idLabel;
    private JLabel nameLabel;
    private JLabel coordinateXLabel;
    private JLabel coordinateYLabel;
    private JLabel creationDateLabel;
    private JLabel areaLabel;
    private JLabel numberOfRoomsLabel;
    private JLabel furnishLabel;
    private JLabel viewLabel;
    private JLabel transportLabel;
    private JLabel houseNameLabel;
    private JLabel houseYearLabel;
    private JLabel houseNumberOfFlatsOnFloorLabel;
    private JButton changeButton;

    private Flat flat;
    private RequestSender requestSender;
    private String login;
    private String password;
    private boolean isRegistered;

    ResourceController resourceController;

    public ElementInfoGUI(Flat flat, RequestSender requestSender, String login, String password, boolean isRegistered, ResourceController resourceController) {
        this.flat = flat;
        this.requestSender = requestSender;
        this.login = login;
        this.password = password;
        this.isRegistered = isRegistered;
        this.resourceController = resourceController;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        mainPanel.setBackground(new Color(-13025985));
        mainPanel.setForeground(new Color(-13025985));
        mainPanel.setPreferredSize(new Dimension(700, 450));
        elementInfoPanel = new JPanel();
        elementInfoPanel.setLayout(new GridBagLayout());
        elementInfoPanel.setBackground(new Color(-13025985));
        elementInfoPanel.setPreferredSize(new Dimension(650, 210));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(elementInfoPanel, gbc);
        userNameLabel = new JLabel();
        userNameLabel.setBackground(new Color(-13025985));
        Font userNameLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, userNameLabel.getFont());
        if (userNameLabelFont != null) userNameLabel.setFont(userNameLabelFont);
        userNameLabel.setForeground(new Color(-1));
        userNameLabel.setHorizontalAlignment(2);
        userNameLabel.setHorizontalTextPosition(0);
        userNameLabel.setPreferredSize(new Dimension(325, 30));
        userNameLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(userNameLabel, gbc);
        coordinateXLabel = new JLabel();
        coordinateXLabel.setBackground(new Color(-13025985));
        Font coordinateXLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, coordinateXLabel.getFont());
        if (coordinateXLabelFont != null) coordinateXLabel.setFont(coordinateXLabelFont);
        coordinateXLabel.setForeground(new Color(-1));
        coordinateXLabel.setHorizontalAlignment(2);
        coordinateXLabel.setHorizontalTextPosition(0);
        coordinateXLabel.setPreferredSize(new Dimension(325, 30));
        coordinateXLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(coordinateXLabel, gbc);
        areaLabel = new JLabel();
        areaLabel.setBackground(new Color(-13025985));
        Font areaLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, areaLabel.getFont());
        if (areaLabelFont != null) areaLabel.setFont(areaLabelFont);
        areaLabel.setForeground(new Color(-1));
        areaLabel.setHorizontalAlignment(2);
        areaLabel.setHorizontalTextPosition(0);
        areaLabel.setPreferredSize(new Dimension(325, 30));
        areaLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(areaLabel, gbc);
        furnishLabel = new JLabel();
        furnishLabel.setBackground(new Color(-13025985));
        Font furnishLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, furnishLabel.getFont());
        if (furnishLabelFont != null) furnishLabel.setFont(furnishLabelFont);
        furnishLabel.setForeground(new Color(-1));
        furnishLabel.setHorizontalAlignment(2);
        furnishLabel.setHorizontalTextPosition(0);
        furnishLabel.setPreferredSize(new Dimension(325, 30));
        furnishLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(furnishLabel, gbc);
        idLabel = new JLabel();
        idLabel.setBackground(new Color(-13025985));
        Font idLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, idLabel.getFont());
        if (idLabelFont != null) idLabel.setFont(idLabelFont);
        idLabel.setForeground(new Color(-1));
        idLabel.setHorizontalAlignment(4);
        idLabel.setHorizontalTextPosition(0);
        idLabel.setPreferredSize(new Dimension(325, 30));
        idLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(idLabel, gbc);
        creationDateLabel = new JLabel();
        creationDateLabel.setBackground(new Color(-13025985));
        Font creationDateLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, creationDateLabel.getFont());
        if (creationDateLabelFont != null) creationDateLabel.setFont(creationDateLabelFont);
        creationDateLabel.setForeground(new Color(-1));
        creationDateLabel.setHorizontalAlignment(4);
        creationDateLabel.setHorizontalTextPosition(0);
        creationDateLabel.setPreferredSize(new Dimension(325, 30));
        creationDateLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(creationDateLabel, gbc);
        nameLabel = new JLabel();
        nameLabel.setBackground(new Color(-13025985));
        Font nameLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, nameLabel.getFont());
        if (nameLabelFont != null) nameLabel.setFont(nameLabelFont);
        nameLabel.setForeground(new Color(-1));
        nameLabel.setHorizontalAlignment(2);
        nameLabel.setHorizontalTextPosition(0);
        nameLabel.setPreferredSize(new Dimension(325, 30));
        nameLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(nameLabel, gbc);
        coordinateYLabel = new JLabel();
        coordinateYLabel.setBackground(new Color(-13025985));
        Font coordinateYLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, coordinateYLabel.getFont());
        if (coordinateYLabelFont != null) coordinateYLabel.setFont(coordinateYLabelFont);
        coordinateYLabel.setForeground(new Color(-1));
        coordinateYLabel.setHorizontalAlignment(4);
        coordinateYLabel.setHorizontalTextPosition(0);
        coordinateYLabel.setPreferredSize(new Dimension(325, 30));
        coordinateYLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(coordinateYLabel, gbc);
        numberOfRoomsLabel = new JLabel();
        numberOfRoomsLabel.setBackground(new Color(-13025985));
        Font numberOfRoomsLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, numberOfRoomsLabel.getFont());
        if (numberOfRoomsLabelFont != null) numberOfRoomsLabel.setFont(numberOfRoomsLabelFont);
        numberOfRoomsLabel.setForeground(new Color(-1));
        numberOfRoomsLabel.setHorizontalAlignment(4);
        numberOfRoomsLabel.setHorizontalTextPosition(0);
        numberOfRoomsLabel.setPreferredSize(new Dimension(325, 30));
        numberOfRoomsLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(numberOfRoomsLabel, gbc);
        viewLabel = new JLabel();
        viewLabel.setBackground(new Color(-13025985));
        Font viewLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, viewLabel.getFont());
        if (viewLabelFont != null) viewLabel.setFont(viewLabelFont);
        viewLabel.setForeground(new Color(-1));
        viewLabel.setHorizontalAlignment(4);
        viewLabel.setHorizontalTextPosition(0);
        viewLabel.setPreferredSize(new Dimension(325, 30));
        viewLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(viewLabel, gbc);
        houseNameLabel = new JLabel();
        houseNameLabel.setBackground(new Color(-13025985));
        Font houseNameLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, houseNameLabel.getFont());
        if (houseNameLabelFont != null) houseNameLabel.setFont(houseNameLabelFont);
        houseNameLabel.setForeground(new Color(-1));
        houseNameLabel.setHorizontalAlignment(4);
        houseNameLabel.setHorizontalTextPosition(0);
        houseNameLabel.setPreferredSize(new Dimension(325, 30));
        houseNameLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(houseNameLabel, gbc);
        houseNumberOfFlatsOnFloorLabel = new JLabel();
        houseNumberOfFlatsOnFloorLabel.setBackground(new Color(-13025985));
        Font houseNumberOfFlatsOnFloorLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, houseNumberOfFlatsOnFloorLabel.getFont());
        if (houseNumberOfFlatsOnFloorLabelFont != null)
            houseNumberOfFlatsOnFloorLabel.setFont(houseNumberOfFlatsOnFloorLabelFont);
        houseNumberOfFlatsOnFloorLabel.setForeground(new Color(-1));
        houseNumberOfFlatsOnFloorLabel.setHorizontalAlignment(4);
        houseNumberOfFlatsOnFloorLabel.setHorizontalTextPosition(0);
        houseNumberOfFlatsOnFloorLabel.setPreferredSize(new Dimension(325, 30));
        houseNumberOfFlatsOnFloorLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(houseNumberOfFlatsOnFloorLabel, gbc);
        transportLabel = new JLabel();
        transportLabel.setBackground(new Color(-13025985));
        Font transportLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, transportLabel.getFont());
        if (transportLabelFont != null) transportLabel.setFont(transportLabelFont);
        transportLabel.setForeground(new Color(-1));
        transportLabel.setHorizontalAlignment(2);
        transportLabel.setHorizontalTextPosition(0);
        transportLabel.setPreferredSize(new Dimension(325, 30));
        transportLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(transportLabel, gbc);
        houseYearLabel = new JLabel();
        houseYearLabel.setBackground(new Color(-13025985));
        Font houseYearLabelFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, houseYearLabel.getFont());
        if (houseYearLabelFont != null) houseYearLabel.setFont(houseYearLabelFont);
        houseYearLabel.setForeground(new Color(-1));
        houseYearLabel.setHorizontalAlignment(2);
        houseYearLabel.setHorizontalTextPosition(0);
        houseYearLabel.setPreferredSize(new Dimension(325, 30));
        houseYearLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        elementInfoPanel.add(houseYearLabel, gbc);
        backButtonPanel = new JPanel();
        backButtonPanel.setLayout(new GridBagLayout());
        backButtonPanel.setBackground(new Color(-13025985));
        backButtonPanel.setPreferredSize(new Dimension(500, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(20, 0, 0, 0);
        mainPanel.add(backButtonPanel, gbc);
        backButton.setActionCommand("");
        backButton.setAlignmentX(0.5f);
        backButton.setAlignmentY(0.5f);
        backButton.setAutoscrolls(false);
        backButton.setBackground(new Color(-13025985));
        backButton.setBorderPainted(true);
        backButton.setFocusPainted(false);
        Font backButtonFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, backButton.getFont());
        if (backButtonFont != null) backButton.setFont(backButtonFont);
        backButton.setForeground(new Color(-1));
        backButton.setPreferredSize(new Dimension(180, 30));
        backButton.setText("Назад");
        backButton.putClientProperty("hideActionText", Boolean.FALSE);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 0, 5);
        backButtonPanel.add(backButton, gbc);
        changeButton.setActionCommand("");
        changeButton.setAlignmentX(0.5f);
        changeButton.setAlignmentY(0.5f);
        changeButton.setAutoscrolls(false);
        changeButton.setBackground(new Color(-13025985));
        changeButton.setBorderPainted(true);
        changeButton.setFocusPainted(false);
        Font changeButtonFont = this.$$$getFont$$$("Franklin Gothic Demi", Font.PLAIN, 18, changeButton.getFont());
        if (changeButtonFont != null) changeButton.setFont(changeButtonFont);
        changeButton.setForeground(new Color(-1));
        changeButton.setPreferredSize(new Dimension(180, 30));
        changeButton.setText("Изменить");
        changeButton.putClientProperty("hideActionText", Boolean.FALSE);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 5, 0, 0);
        backButtonPanel.add(changeButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

    Timer timer;

    private void createUIComponents() {
        backButton = new JButton();
        changeButton = new JButton();

        timer = new Timer(1, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                userNameLabel.setText(resourceController.getMainResourceBundle().getString("Имя создателя: ") + flat.getUserName());
                idLabel.setText("ID: " + flat.getId());
                nameLabel.setText(resourceController.getMainResourceBundle().getString("Имя: ") + flat.getName());
                creationDateLabel.setText(resourceController.getMainResourceBundle().getString("Дата создания: ") + flat.getCreationDate().format(DateTimeFormatter.ofPattern("MM/dd/yyyy - HH:mm")));
                coordinateXLabel.setText(resourceController.getMainResourceBundle().getString("Координата X: ") + flat.getCoordinates().split(";")[0].trim());
                coordinateYLabel.setText(resourceController.getMainResourceBundle().getString("Координата Y: ") + flat.getCoordinates().split(";")[1].trim());
                areaLabel.setText(resourceController.getMainResourceBundle().getString("Площадь: ") + flat.getArea());
                numberOfRoomsLabel.setText(resourceController.getMainResourceBundle().getString("Количество комнат: ") + flat.getNumberOfRooms());
                furnishLabel.setText(resourceController.getMainResourceBundle().getString("Качество обстановки: ") + flat.getFurnish());
                viewLabel.setText(resourceController.getMainResourceBundle().getString("Видимость: ") + flat.getView());
                transportLabel.setText(resourceController.getMainResourceBundle().getString("Транспорт: ") + flat.getTransport());
                houseNameLabel.setText(resourceController.getMainResourceBundle().getString("Имя дома: ") + flat.getHouse().split(";")[0].trim());
                houseYearLabel.setText(resourceController.getMainResourceBundle().getString("Возраст дома: ") + flat.getHouse().split(";")[1].trim());
                houseNumberOfFlatsOnFloorLabel.setText(resourceController.getMainResourceBundle().getString("Количество квартир: ") + flat.getHouse().split(";")[2].trim());
                timer.stop();
            }
        });

        timer.start();

        backButton.addActionListener(new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                elementInfoPanel.setVisible(false);
                backButtonPanel.setVisible(false);
                mainPanel.removeAll();
                VisualizationGUI visualizationGUI = new VisualizationGUI(requestSender, login, password, isRegistered, resourceController);
                visualizationGUI.drawMessages();
                visualizationGUI.setUserName();
                mainPanel.add(visualizationGUI.$$$getRootComponent$$$());
            }
        });

        changeButton.addActionListener(new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                elementInfoPanel.setVisible(false);
                backButtonPanel.setVisible(false);
                mainPanel.removeAll();
                AskFlatGUI askFlatGUI = new AskFlatGUI(requestSender, login, password, isRegistered, false, flat.getId(), 2, resourceController);
                askFlatGUI.drawMessages();
                askFlatGUI.setFlat(flat);
                mainPanel.add(askFlatGUI.$$$getRootComponent$$$());
            }
        });
    }
}
